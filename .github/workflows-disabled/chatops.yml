name: ChatOps
on: [issue_comment]

jobs:
  chatops:
    runs-on: ubuntu-latest
    steps:
      - name: listen for PR Comments
        uses: machine-learning-apps/actions-chatops@master
        with:
          TRIGGER_PHRASE: "/bot"
        env: # you must supply GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: prcomm
        # This step clones the branch of the PR associated with the triggering phrase, but only if it is triggered.
      - name: clone branch of PR
        if: steps.prcomm.outputs.BOOL_TRIGGERED == 'true'
        uses: actions/checkout@master
        with:
          ref: ${{ steps.prcomm.outputs.SHA }}

      - name: Create comment
        if: steps.prcomm.outputs.BOOL_TRIGGERED == 'true' && steps.prcomm.outputs.TRAILING_TOKEN == 'canary'
        uses: jungwinter/comment@v1
        id: create_comment
        with:
          type: create
          body: You requested to create a canary release. Watch this comment for info
          issue_number: ${{ steps.prcomm.outputs.PULL_REQUEST_NUMBER }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: yarn install and build
        if: steps.prcomm.outputs.BOOL_TRIGGERED == 'true'
        run: |
          yarn
          yarn build

      - name: release canary
        uses: mathiasvr/command-output@v1
        id: release
        if: steps.prcomm.outputs.BOOL_TRIGGERED == 'true' && steps.prcomm.outputs.TRAILING_TOKEN == 'canary'
        with:
          run: |
            yarn beachball canary --canary-name pr${{ steps.prcomm.outputs.PULL_REQUEST_NUMBER }} -n $NPM_AUTHTOKEN
        env:
          NPM_AUTHTOKEN: ${{ secrets.npm_authtoken }}

      - name: Update comment
        if: steps.prcomm.outputs.BOOL_TRIGGERED == 'true' && steps.prcomm.outputs.TRAILING_TOKEN == 'canary'
        uses: jungwinter/comment@v1
        id: update_comment
        with:
          type: edit
          body: |
            **BEEP BOOP** Here's the canary build info
            ```
            ${{ steps.release.outputs.stdout }}
            ```
          comment_id: ${{ steps.create_comment.outputs.id }}
          token: ${{ secrets.GITHUB_TOKEN }}
